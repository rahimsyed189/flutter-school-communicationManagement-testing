rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      // Admin is identified by Firestore user doc field role == 'admin'
      // This app does not use FirebaseAuth; use custom auth or
      // a Cloud Function to enforce writes in production.
      return request.auth != null && request.auth.token.role == 'admin';
    }

    // Announcements: anyone can read; only admins can write
    match /communications/{doc} {
      allow read: if true;
      allow create: if isAdmin();
      allow update, delete: if false; // prevent edits/deletes in prod
    }

    // Users collection: read limited fields; only admins manage users
    match /users/{uid} {
      allow read: if true; // or restrict fields via Cloud Functions
      allow create, update, delete: if isAdmin();
    }

    // Queue used by backend to trigger FCM
    match /notificationQueue/{doc} {
      allow read: if false;
      allow create: if isAdmin();
      allow update, delete: if false;
    }

    // Deny everything else
    match /{document=**} { allow read, write: if false; }
  }
}
